#include <ESP8266WiFi.h>
#include <WebSocketsClient.h>

// WiFi credentials
const char* ssid = "Prav";
const char* password = "temp1234";

// WebSocket server details
const char* websocketServerAddress = "192.168.125.7";  // Replace with your laptop's IP address
const uint16_t websocketServerPort = 8000;             // Port where WebSocket server is running

volatile unsigned long pulseCount = 0;
unsigned long lastPulseTime = 0;
unsigned long lastUpdateTime = 0;

float WATER = 0;
float TOTAL = 0;
float LS = 0;
const int inputPin = 4;  // GPIO 4 (D2) for the sensor input

// WebSocket and WiFi objects
WiFiClient wifiClient;
WebSocketsClient webSocket;

void IRAM_ATTR handlePulse() {
  pulseCount++;
}

void webSocketEvent(WStype_t type, uint8_t * payload, size_t length) {
  switch (type) {
    case WStype_DISCONNECTED:
      Serial.println("WebSocket Disconnected!");
      break;
    case WStype_CONNECTED:
      Serial.println("WebSocket Connected!");
      break;
    case WStype_TEXT:
      Serial.printf("Received: %s\n", payload);
      break;
  }
}

void setup() {
  Serial.begin(9600);
  pinMode(inputPin, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(inputPin), handlePulse, FALLING);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Initialize WebSocket client
  webSocket.begin(websocketServerAddress, websocketServerPort, "/");
  webSocket.onEvent(webSocketEvent);

  delay(500);  // Short delay before starting main loop
}

void loop() {
  webSocket.loop();

  unsigned long currentTime = millis();
  unsigned long timeInterval = currentTime - lastUpdateTime;

  if (timeInterval >= 1000) { // Calculate every second
    detachInterrupt(digitalPinToInterrupt(inputPin));
    float frequency = pulseCount;
    pulseCount = 0;
    attachInterrupt(digitalPinToInterrupt(inputPin), handlePulse, FALLING);

    WATER = frequency / 52.53;
    LS = WATER / 60;

    if (!isinf(frequency)) {
      TOTAL += LS;
      Serial.print("VOL.: ");
      Serial.print(WATER);
      Serial.println(" L/M");
      Serial.print("TOTAL:");
      Serial.print(TOTAL);
      Serial.println(" L");

      String dataToSend = "{\"type\":\"sdata\",\"id\":\"b1\",\"total\":" + String(WATER) + "}";  // JSON with id and total
      webSocket.sendTXT(dataToSend);  // Send data as text
      Serial.print("Sent: ");
      Serial.println(dataToSend);
    } else {
      Serial.println("VOL. :0.00");
      Serial.print("TOTAL:");
      Serial.print(TOTAL);
      Serial.println(" L");
    }

    lastUpdateTime = currentTime;
  }
}
